{
  "hash": "1623e8f86ac5be61756e4997abc6c901",
  "result": {
    "engine": "knitr",
    "markdown": "# Conventions {#sec-conventions}\n\nThis book will use the following conventions:\n\n* Code: `list(number = 1, letter = \"A\")`\n* File paths: <code class='path'>data/sales.csv</code>\n* Packages: <pkg>tidyverse</pkg>\n* Menu/interface options: <if>Tools > Global Options... > Pane Layout</if>\n* Glossary items: <a href='https://psyteachr.github.io/glossary/o#ordinal' target='_blank' class='glossary' title='Discrete variables that have an inherent order, such as level of education or dislike/like.'>ordinal</a>\n* Citations: @R-tidyverse\n* Internal links: @sec-intro\n* External links: [Mastering Shiny](https://mastering-shiny.org/)\n* Mac-specific: <mac>Cmd-Shift-F10</mac> \n* Windows-specific: <pc>Ctl-Shift-F10</pc>\n\nA list of mac and windows [keyboard shortcuts](https://support.posit.co/hc/en-us/articles/200711853-Keyboard-Shortcuts-in-the-RStudio-IDE).\n\n\n## Test Yourself\n\nI am going to learn a lot: <select class='webex-select'><option value='blank'></option><option value='answer'>TRUE</option><option value=''>FALSE</option></select>\n\n\n\n\n* What is a p-value? <div class='webex-radiogroup' id='radio_ROSVLCJZVR'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_ROSVLCJZVR\" value=\"\"></input> <span>the probability that the null hypothesis is true</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_ROSVLCJZVR\" value=\"answer\"></input> <span>the probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is true</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_ROSVLCJZVR\" value=\"\"></input> <span>the probability of making an error in your conclusion</span></label></div>\n\n::: {.cell webex.hide='Hidden Solutions'}\n\n<div class='webex-solution'><button>Hidden Solutions</button>\nYou found it!\n</div>\n:::\n\n\n\n\n\n\n## Callout boxes\n\n[See the [quarto reference](https://quarto.org/docs/authoring/callouts.html) for more options.]{.aside}\n\n::: {.callout-note}\nInformational asides.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Click to expand \n\nTips\n:::\n\n::: {.callout-warning}\nNotes to warn you about something.\n:::\n\n::: {.callout-caution}\nNotes about things that could cause serious errors.\n:::\n\n::: {.callout-important}\nNotes about things that are important.\n:::\n\n::: {.try}\nTry it yourself.\n:::\n\n## Code and Output\n\n\n\n\n\n```{.markdown}\n## Markdown Example\n\n* Inline code: `r nrow(iris)`\n* *Italics*\n* **Bold**\n```\n\n::: {.cell}\n\n```{.r .cell-code}\n# code chunks\npaste(\"Code\", \"Output\", 1, sep = \" \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Code Output 1\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| fig-cap: \"Set `#| echo: fenced` for code chunks with headers\"\n#| label: fig-fenced-example\n#‎| fig-cap: \"#| Set `echo: fenced` for code chunks with headers\"\n#‎| echo: false\n\nhist(rnorm(100000))\n```\n````\n\n::: {.cell-output-display}\n![Set `#| echo: fenced` for code chunks with headers](images/figures/fig-fenced-example-1.png){#fig-fenced-example width=100%}\n:::\n:::\n\n\n\n\n:::{.callout-warning collapse=\"true\"}\n## Showing `echo` in fenced code blocks\n\nUse a version of `#‎|` with an invisible character to show options in a fenced code block that you don't actually want to apply to this chunk, such as a second `echo` or a duplicate `label`. Copy and edit the text below into RStudio and you'll see a red highlighted dot between `#` and `|`. These lines have to go *below* any lines that you do want to apply to this code block.\n\n```\n#‎| echo: false\n```\n:::\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}